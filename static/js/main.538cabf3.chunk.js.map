{"version":3,"sources":["component/Form.js","component/Todo.js","component/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","setInputText","inputText","todos","setTodos","setStatus","onChange","e","console","log","target","value","type","className","onClick","preventDefault","text","completed","id","Math","trunc","random","name","Todo","todo","map","item","toast","success","position","filter","el","TodoList","filterTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterhandler","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAsDeA,MAhDf,SAAcC,GAEV,IAAOC,EAAuDD,EAAvDC,aAAcC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,MAAOC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,UAwBjD,OACI,iCACI,uBACIC,SAzBa,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBV,EAAaM,EAAEG,OAAOC,QAwBdC,KAAK,OACLC,UAAU,aACVF,MAAOT,IAEX,wBAAQY,QAzBU,SAACP,GACvBA,EAAEQ,iBACFX,EAAS,GAAD,mBACDD,GADC,CAEJ,CACIa,KAAMd,EACNe,WAAW,EACXC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,cAG5BpB,EAAa,KAe2BY,UAAU,cAAcD,KAAK,SAAjE,SACA,mBAAGC,UAAU,yBAEb,qBAAKA,UAAU,SAAf,SACA,yBAAQP,SAhBM,SAACC,GACnBF,EAAUE,EAAEG,OAAOC,QAekBW,KAAK,QAAQT,UAAU,cAAxD,UACI,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,mBCMDY,MA5Cf,SAAcvB,GAEV,IAAOgB,EAA+BhB,EAA/BgB,KAAMQ,EAAyBxB,EAAzBwB,KAAMrB,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SA6B1B,OACI,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeW,EAAKP,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QA1BQ,WACpBV,EAASD,EAAMsB,KAAI,SAACC,GAChB,OAAGA,EAAKR,KAAOM,EAAKN,GACT,2BACAQ,GADP,IAEIT,WAAYS,EAAKT,YAGlBS,MAEXC,IAAMC,QAAQ,4BAAoB,CAC9BC,SAAU,kBAewBhB,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QAjCQ,WACpBV,EAASD,EAAM2B,QAAO,SAACC,GAAD,OAAQA,EAAGb,KAAOM,EAAKN,QAgCPL,UAAU,YAA5C,SACI,mBAAGA,UAAU,uBCxBdmB,MAff,SAAkBhC,GAEd,IAAQG,EAAgCH,EAAhCG,MAAOC,EAAyBJ,EAAzBI,SAAU6B,EAAejC,EAAfiC,YAEzB,OACI,qBAAKpB,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKoB,EAAYR,KAAI,SAACD,GAAD,OACb,cAAC,EAAD,CAAMA,KAAMA,EAAMrB,MAAOA,EAAOC,SAAUA,EAAUY,KAAMQ,EAAKR,MAAWQ,EAAKN,YC8DpFgB,MAvEf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOjC,EAAP,KAAkBD,EAAlB,KACA,EAA0BkC,mBAAS,IAAnC,mBAAOhC,EAAP,KAAcC,EAAd,KACA,EAA4B+B,mBAAS,OAArC,mBAAOC,EAAP,KAAe/B,EAAf,KACA,EAAsC8B,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBI,EAApB,KAEAC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,IACAC,MACC,CAACtC,EAAOiC,IAEX,IAAMI,EAAgB,WACpB,OAAQJ,GACN,IAAK,YACHC,EAAelC,EAAM2B,QAAO,SAACN,GAAD,OAA6B,IAAnBA,EAAKP,cAC3C,MACF,IAAK,cACHoB,EAAelC,EAAM2B,QAAO,SAACN,GAAD,OAA6B,IAAnBA,EAAKP,cAC3C,MACF,QACEoB,EAAelC,KAKfsC,EAAiB,WACgB,OAAlCC,aAAaC,QAAQ,SACtBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,KAG7CJ,aAAaE,QAAQ,QAASC,KAAKC,UAAU3C,KAI3CoC,EAAgB,WACpB,GAAqC,OAAlCG,aAAaC,QAAQ,SACtBD,aAAaE,QAAQ,QAASC,KAAKC,UAAU,SAE1C,CACH,IAAIC,EAAYF,KAAKG,MAAMN,aAAaC,QAAQ,UAChDvC,EAAS2C,KAKb,OACE,sBAAKlC,UAAU,MAAf,UACE,iCACA,wCAAU,uBAAV,8BAEA,cAAC,IAAD,IACA,cAAC,EAAD,CACEV,MAAOA,EACPC,SAAUA,EACVF,UAAWA,EACXD,aAAcA,EACdI,UAAWA,IAEb,cAAC,EAAD,CACED,SAAUA,EACVD,MAAOA,EACP8B,YAAaA,QC5DNgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.538cabf3.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nForm.propTypes = {\r\n};\r\n\r\nfunction Form(props) {\r\n\r\n    const {setInputText, inputText, todos, setTodos, setStatus} = props;\r\n\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    } \r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                text: inputText,\r\n                completed: false,\r\n                id: Math.trunc(Math.random() * 1000),\r\n            }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const statushandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input \r\n                onChange={inputTextHandler} \r\n                type=\"text\" \r\n                className=\"todo-input\" \r\n                value={inputText}\r\n            />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n            <select onChange={statushandler} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nTodo.propTypes = {\r\n    \r\n};\r\n\r\nfunction Todo(props) {\r\n\r\n    const {text, todo, todos, setTodos} = props;\r\n\r\n    const onDeletehandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    }\r\n\r\n    const completehandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item,\r\n                    completed: !item.completed,\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n        toast.success('Thêm thành công!', {\r\n            position: \"bottom-right\",\r\n            // transition : Slide,\r\n            // autoClose: 3000,\r\n            // hideProgressBar: false,\r\n            // closeOnClick: true,\r\n            // pauseOnHover: true,\r\n            // draggable: false,\r\n            // progress: undefined,\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completehandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={onDeletehandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n// import PropTypes from 'prop-types';\r\n\r\nTodoList.propTypes = {\r\n    \r\n};\r\n\r\nfunction TodoList(props) {\r\n\r\n    const { todos, setTodos, filterTodos} = props;\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filterTodos.map((todo) => (\r\n                    <Todo todo={todo} todos={todos} setTodos={setTodos} text={todo.text} key={todo.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './component/Form';\nimport TodoList from './component/TodoList';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterhandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterhandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Hello,<br />Welcome to My TodoList</h1>\n      </header>\n      <ToastContainer />\n      <Form \n        todos={todos} \n        setTodos={setTodos}\n        inputText={inputText} \n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList \n        setTodos={setTodos} \n        todos={todos}\n        filterTodos={filterTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}